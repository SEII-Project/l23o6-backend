# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: SpringBoot Deploy

on:
  push:
    branches: [ "master", "GitActions" ]
  pull_request:
    branches: [ "master" ]

jobs: #具体的任务
  build:
    
    runs-on: ubuntu-latest #执行的环境
    
    steps:
      - uses: actions/checkout@v2 #拉取项目文件
      - name: Set up JDK 17 #配置java环境
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew  #更改脚本权限
        run: chmod +x gradlew
      - name: Build with Gradle  #开始打包 -x test 跳过测试
        run: ./gradlew bootJar -x test
      - name: scp_upload_jar_file #上传文件到服务器
        uses: garygrossgarten/github-action-scp@release
        with:
          local: 'build/libs/l23o6-0.0.1-SNAPSHOT.jar' #打包文件的路径
          remote: '/home/l23o6-0.0.1-SNAPSHOT.jar' #放到服务器的目录
          host: ${{ secrets.HOST }} #服务器ip地址
          username: ${{ secrets.USERNAME }} #服务器ssh用户名
          password: ${{ secrets.PASSWORD }} #服务器ssh密码
          port: ${{ secrets.PORT }} # 服务器ssh端口（默认22）
      - name: deploy_app_jar #开始部署
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }} #服务器ip地址
          username: ${{ secrets.USERNAME }} #服务器ssh用户名
          password: ${{ secrets.PASSWORD }} #服务器ssh密码
          port: ${{ secrets.PORT }} # 服务器ssh端口（默认22）
          script: |
            cd /home/
            java -jar app.jar --server.port=8080