name: user-IT

on:
  push:
    branches: [ "master", "GitActions" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: root
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17 #配置java环境
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew  #更改脚本权限
        run: chmod +x gradlew
      - name: Build with Gradle  #开始打包 -x test 跳过测试
        run: ./gradlew bootJar -x test
      - name: scp_upload_jar_file #上传文件到服务器
        uses: garygrossgarten/github-action-scp@release
        with:
          local: 'build/libs/l23o6-0.0.1-SNAPSHOT.jar' #打包文件的路径
          remote: '/home/l23o6-0.0.1-SNAPSHOT.jar' #放到服务器的目录
          host: ${{ secrets.HOST }} #服务器ip地址
          username: ${{ secrets.USERNAME }} #服务器ssh用户名
          password: ${{ secrets.PASSWORD }} #服务器ssh密码
          port: ${{ secrets.PORT }} # 服务器ssh端口（默认22）
      - name: deploy_app_jar #开始部署
        uses: appleboy/ssh-action@master
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        with:
          host: ${{ secrets.HOST }} #服务器ip地址
          username: ${{ secrets.USERNAME }} #服务器ssh用户名
          password: ${{ secrets.PASSWORD }} #服务器ssh密码
          port: ${{ secrets.PORT }} # 服务器ssh端口（默认22）
          script: |
            PID=$(lsof -ti:8080)
            if [ -n "$PID" ]; then
              kill $PID
            fi
            cd /home/
            java -jar l23o6-0.0.1-SNAPSHOT.jar --server.port=8080 &
            npm install -g apifox-cli
            timeout 30s apifox run https://api.apifox.cn/api/v1/projects/2982605/api-test/ci-config/368480/detail?token=xszu1e0ktTSNLS16SbfVCe -r html,cli
          